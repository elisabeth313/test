#COM 110 Graphical User Interfaces (GUIs)
#Elisabeth Fernandez
#button.py program
#This program creates a GUI with two buttons.
#Depending which button the user clicks, a circle or rectangle is drawn.


from graphics import *
import math
import random

def drawButton(pt1, pt2, label, window):
    #this allows a really easy way to draw a button using parameters
    button = Rectangle(pt1, pt2)
    button.setFill("blue3")
    buttonlabel = \
Text(Point((pt1.getX()+pt2.getX())/2,(pt1.getY()+pt2.getY())/2),label)
    buttonlabel.setFill("white")
    button.draw(window)
    buttonlabel.draw(window)

def buttons():
    
    win=GraphWin("Button GUI", 800,800)

    win.setCoords( -1,-1, 100,100)
    #Note that given the dimensions of the graphical window (defined above),
    #this means that each tick on the x-axis is now 8 pixels
    #and each tick on the y-axis is also 8 pixels!


    drawButton(Point(25,96),Point(35,90),"Bubbles!",win)

    #Get a mouse click and then check if it is in the button 
    pt=win.getMouse()
    #the .getX() function returns the x-value of a Point object
    if pt.getX()>=25 and pt.getX()<=35 and pt.getY()<=96 and pt.getY()>=90:
        #in the parameters for drawCircle
        #include the center point, radius, color, and the window
        for i in range(55):
            red = random.randrange(255)
            green = random.randrange(255)
            blue = random.randrange(255)
            x = random.randrange(100)
            y = random.randrange(100)
            drawCircle(Point(x,y),random.randrange(25),color_rgb(red, green, blue),win)

    closeMessage = Text(Point(50,5), "Click anywhere to end program.")
    closeMessage.draw(win)
    pt=win.getMouse()
    win.close()

def drawRectangle(TLpoint,BRpoint, color, gwin):
    rect = Rectangle(TLpoint,BRpoint)
    rect.setFill(color)
    rect.draw(gwin)

def drawCircle(center, rad, color, gwin):
    circ=Circle(center, rad)
    circ.setFill(color)
    circ.draw(gwin)

buttons()
